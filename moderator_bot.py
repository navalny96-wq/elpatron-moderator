import os, re, threading
from flask import Flask
from telegram.ext import Updater, MessageHandler, Filters
from telegram import ChatPermissions
import re
from collections import defaultdict

BOT_TOKEN = os.getenv("BOT_TOKEN")

BAD_WORDS = [
    "—Ö—É–π", "–ø–∏–∑–¥–∞", "—î–±–∞—Ç—å", "—î–±—É—á", "–Ω–∞—Ö—É–π", "–≥–∞–Ω–¥–æ–Ω", "–∑–∞–ª—É–ø–∞", "–±–ª—è–¥—å", "—Å—É–∫–∞", "—à–∞–ª–∞–≤–∞", "—á–º–æ", "–º—Ä–∞–∑—å", "–≥–Ω–∏–¥–∞",
    "fuck", "shit", "bitch", "asshole", "faggot", "dick", "pussy", "nigger", "retard",
    "—Ö–µ—Ä", "–¥–∞—É–Ω", "—É–±–ª—é–¥–æ–∫", "–ø–µ–¥–∏–∫", "–ø–µ—Ç—É—Ö", "–¥–æ–ª–±–æ–µ–±", "–º—É–¥–∞–∫", "–≥–∞–Ω–¥–∂–∞", "–º–∞—Ä—ñ—Ö—É–∞–Ω–∞", "—Ç—Ä–∞–≤–∫–∞"
]

BANNED_TOPICS = [
    "–≤—ñ–π–Ω–∞", "–≤—ñ–π—Å—å–∫–æ", "–ø–æ–ª—ñ—Ç–∏–∫–∞", "–ø—É—Ç—ñ–Ω", "–∑–µ–ª–µ–Ω—Å—å–∫–∏–π",
    "–±–æ–º–±–∞", "–º–æ–±—ñ–ª—ñ–∑–∞—Ü—ñ—è", "–≤—Ç–æ—Ä–≥–Ω–µ–Ω–Ω—è", "—Ä–∞—à–∫–∞", "–∫–∞—Ü–∞–ø–∏", "–∞–≥—Ä–µ—Å—ñ—è",
    "–Ω–∞—Ü–∏—Å—Ç", "—Ä–∞—Å–∏–∑–º", "—Ç–µ—Ä–æ—Ä–∏–∑–º", "—Å–º–µ—Ä—Ç—å", "–≤–±–∏–≤—Å—Ç–≤–æ", "—Å—Ç—Ä—ñ–ª—è–Ω–∏–Ω–∞"
]

URL_PATTERN = r"(https?://|www\.|[a-zA-Z0-9-]+\.(com|net|ua|org|ru|by|kz|pl|info|biz|io|gg|t\.me|me|ly))"

user_violations = defaultdict(int)
MAX_WARNINGS = 2

def moderate(update, context):
    if not update.message or not update.message.from_user:
        return

    user = update.message.from_user
    user_id = user.id
    chat_id = update.message.chat_id
    message = update.message.text.lower()

    violation = False

    if any(word in message for word in BAD_WORDS + BANNED_TOPICS):
        violation = True

    if re.search(URL_PATTERN, message):
        violation = True

    if violation:
        context.bot.delete_message(chat_id=chat_id, message_id=update.message.message_id)
        user_violations[user_id] += 1

        if user_violations[user_id] >= MAX_WARNINGS:
            try:
                context.bot.kick_chat_member(chat_id=chat_id, user_id=user_id)
                context.bot.send_message(chat_id=chat_id, text=f"üö´ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user.full_name} –∑–∞–±–∞–Ω–µ–Ω–∏–π –∑–∞ –ø–æ—Ä—É—à–µ–Ω–Ω—è –ø—Ä–∞–≤–∏–ª.")
            except Exception as e:
                print(f"‚ùó –ü–æ–º–∏–ª–∫–∞ –±–∞–Ω—É (–º–æ–∂–ª–∏–≤–æ, –∞–¥–º—ñ–Ω): {e}")
        else:
            context.bot.send_message(chat_id=chat_id, text=f"‚ö†Ô∏è –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è {user.full_name}: –ø–æ—Ä—É—à–µ–Ω–Ω—è –ø—Ä–∞–≤–∏–ª ({user_violations[user_id]}/{MAX_WARNINGS})")

def main():
    updater = Updater(BOT_TOKEN, use_context=True)
    dp = updater.dispatcher
    dp.add_handler(MessageHandler(Filters.text & (~Filters.command), moderate))
    print("‚úÖ –ë–æ—Ç-–º–æ–¥–µ—Ä–∞—Ç–æ—Ä –∑–∞–ø—É—â–µ–Ω–æ –∑ Render")
    updater.start_polling()
    updater.idle()

# --- –∑–∞–ø—É—Å–∫–∞—á –±–æ—Ç–∞ —É –æ–∫—Ä–µ–º–æ–º—É –ø–æ—Ç–æ—Ü—ñ ---
def run_bot():
    updater = Updater(BOT_TOKEN, use_context=True)
    # –ø—Ä–∏–±–∏—Ä–∞—î–º–æ –º–æ–∂–ª–∏–≤–∏–π webhook —ñ —Å—Ç–∞—Ä—ñ –∞–ø–¥–µ–π—Ç–∏ (—ñ–Ω–∞–∫—à–µ –∫–æ–Ω—Ñ–ª—ñ–∫—Ç)
    updater.bot.delete_webhook(drop_pending_updates=True)

    dp = updater.dispatcher
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, moderate))

    print("‚úÖ Telegram-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ (polling)‚Ä¶")
    updater.start_polling(clean=True)
    updater.idle()

# --- –∫—Ä–∏—Ö—ñ—Ç–Ω–∏–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Render health-check ---
app = Flask(__name__)

@app.get("/")
def ok():
    return "OK", 200

if __name__ == "__main__":
    # –±–æ—Ç —É —Ñ–æ–Ω—ñ
    t = threading.Thread(target=run_bot, daemon=True)
    t.start()

    # Render –æ—á—ñ–∫—É—î, —â–æ —Å–µ—Ä–≤—ñ—Å —Å–ª—É—Ö–∞—î PORT
    port = int(os.getenv("PORT", "10000"))
    print(f"üåê Health server on port {port}")
    app.run(host="0.0.0.0", port=port)
