# -*- coding: utf-8 -*-
import os
import re
import threading
from collections import defaultdict
from flask import Flask
from telegram.ext import Updater, MessageHandler, Filters

# ===== –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è =====
BOT_TOKEN = os.getenv("BOT_TOKEN") or "–í–°–¢–ê–í_–°–í–Ü–ô_–¢–û–ö–ï–ù_–¢–£–¢"

BAD_WORDS = [
    "—Ö—É–π","–ø–∏–∑–¥–∞","—î–±–∞—Ç—å","—î–±—É—á","–Ω–∞—Ö—É–π","–≥–∞–Ω–¥–æ–Ω","–∑–∞–ª—É–ø–∞","–±–ª—è–¥—å","—Å—É–∫–∞","—à–∞–ª–∞–≤–∞","—á–º–æ","–º—Ä–∞–∑—å","–≥–Ω–∏–¥–∞",
    "fuck","shit","bitch","asshole","dick","pussy"
]
BANNED_TOPICS = [
    "–ø–æ–ª—ñ—Ç–∏–∫–∞","–ø—É—Ç—ñ–Ω","–∑–µ–ª–µ–Ω—Å—å–∫–∏–π","–≤—ñ–π–Ω–∞","–º–æ–±—ñ–ª—ñ–∑–∞—Ü—ñ—è","—Ç–µ—Ä–æ—Ä–∏–∑–º","–Ω–∞—Å–∏–ª—å—Å—Ç–≤–æ"
]
URL_PATTERN = re.compile(r"(https?://|www\.)", re.IGNORECASE)

warnings = defaultdict(int)

# ===== Flask –¥–ª—è health-check (Render) =====
app = Flask(__name__)

@app.route("/")
def index():
    return "OK", 200

def run_health_server():
    port = int(os.getenv("PORT", "10000"))
    app.run(host="0.0.0.0", port=port)

# ===== –õ–æ–≥—ñ–∫–∞ –º–æ–¥–µ—Ä–∞—Ü—ñ—ó =====
def handle_violation(update, context, reason):
    user_id = update.message.from_user.id
    warnings[user_id] += 1

    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    try:
        update.message.delete()
    except Exception as e:
        print("delete error:", e)

    if warnings[user_id] == 1:
        try:
            update.message.reply_text(f"‚ö† –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è! ({reason}). –ù–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Ä–∞–∑—É ‚Äî –±–∞–Ω.")
        except Exception as e:
            print("warn reply error:", e)
    else:
        # –ë–∞–Ω –ø—ñ—Å–ª—è 2+ –ø–æ—Ä—É—à–µ–Ω—å
        try:
            context.bot.kick_chat_member(update.message.chat_id, user_id)
            update.message.reply_text(f"üö´ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ ({reason}).")
        except Exception as e:
            print("ban error:", e)

def check_message(update, context):
    if not update.message or not update.message.text:
        return
    text = update.message.text.lower()

    if any(word in text for word in BAD_WORDS):
        handle_violation(update, context, "–Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω–∞ –ª–µ–∫—Å–∏–∫–∞"); return
    if any(topic in text for topic in BANNED_TOPICS):
        handle_violation(update, context, "–∑–∞–±–æ—Ä–æ–Ω–µ–Ω–∞ —Ç–µ–º–∞"); return
    if URL_PATTERN.search(text):
        handle_violation(update, context, "–ø–æ—Å–∏–ª–∞–Ω–Ω—è"); return

# ===== –ó–∞–ø—É—Å–∫ =====
if __name__ == "__main__":
    # 1) Health-—Å–µ—Ä–≤–µ—Ä —É —Ñ–æ–Ω—ñ (—â–æ–± Web Service –Ω–∞ Render –±—É–≤ ¬´–∂–∏–≤–∏–π¬ª)
    threading.Thread(target=run_health_server, daemon=True).start()

    # 2) –ë–æ—Ç —É –ì–û–õ–û–í–ù–û–ú–£ –ø–æ—Ç–æ—Ü—ñ (—â–æ–± –ø—Ä–∞—Ü—é–≤–∞–ª–∏ —Å–∏–≥–Ω–∞–ª–∏ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ idle)
    updater = Updater(BOT_TOKEN, use_context=True)

    # –ö–†–ò–¢–ò–ß–ù–û: –ø—Ä–∏–±–∏—Ä–∞—î–º–æ –±—É–¥—å-—è–∫–∏–π –º–æ–∂–ª–∏–≤–∏–π –≤–µ–±—Ö—É–∫ —ñ –ø—ñ–¥–≤—ñ—à–µ–Ω—ñ –∞–ø–¥–µ–π—Ç–∏
    try:
        updater.bot.delete_webhook(drop_pending_updates=True)
    except Exception as e:
        print("delete_webhook error:", e)

    dp = updater.dispatcher
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, check_message))

    print("‚úÖ Telegram-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ (polling)‚Ä¶")
    # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å—É—á–∞—Å–Ω–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä: drop_pending_updates=True
    updater.start_polling(drop_pending_updates=True)
    updater.idle()
